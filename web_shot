#!/usr/bin/env ruby
#/ Usage: web_shot[options] ...
#/
#/ This script ...

$stdout.sync = $stderr.sync = true

require 'optparse'
require 'selenium-webdriver'
require 'csv'
require 'set'

# constant variables

TIMEOUT = 20

# argument default values 

input = nil
hostnames = nil
vhosts = nil

# parse arguments

file = __FILE__
ARGV.options do |opts|
    opts.on("-i", "--input FILE", String) { |val| input = val }
    opts.on("-n", "--hostnames FILE", String) { |val| hostnames = val }
    opts.on_tail("-h", "--help")          { exec "grep ^#/<'#{file}'|cut -c4-" }
    opts.parse!
end

# check arguments

if input.nil? then
    puts ARGV.options
    exit 1
end

if not File.exists?(input)
    puts "#{input} does not exist!"
    exit 1
end

unless hostnames.nil?
    if not File.exists?(input)
        puts "#{input} does not exist!"
        exit 1
    end

    # Import IP address and virtual host pairs
    vhosts = Hash.new
    CSV.foreach(hostnames, { :skip_blanks => true }) do |row|
        ip = row[0].strip
        fqdn = row[1]
        unless fqdn.empty?
            unless vhosts.has_key? ip
                vhosts[ip] = SortedSet.new
            end
            vhosts[ip] << fqdn.strip.downcase
        end
    end
end

# read in a list of urls to process

URLS = File.readlines(input).each {|l| l.chomp!}

# configure the driver to run in headless mode
options = Selenium::WebDriver::Chrome::Options.new
options.add_argument('--headless')
#options.add_argument('--disable-gpu')
#options.add_argument('--no-sandbox')
#options.add_argument('--user-data-dir')
options.add_argument('--ignore-certificate-errors')
options.add_argument('--disable-popup-blocking')
options.add_argument('--disable-translate')
options.add_argument('--window-size=1024x768')

client = Selenium::WebDriver::Remote::Http::Default.new
client.read_timeout = TIMEOUT + 5

# process urls

URLS.each do |url|
    host = URI.parse(url).host
    port = URI.parse(url).port
    Dir.mkdir(host) unless Dir.exist?(host)
    Dir.mkdir("#{host}/#{port}") unless Dir.exist?("#{host}/#{port}")

    hosts = vhosts[host]
    hosts = SortedSet.new if hosts.nil?
    hosts << host

    hosts.each do |vhost|
        uri = URI(url)
        uri.host = vhost
        filename = "#{host}/#{port}/#{vhost}.png"
        begin
            STDERR.puts "Starting browser"
            driver = Selenium::WebDriver.for :chrome, options: options, http_client: client
            driver.manage.timeouts.page_load = TIMEOUT
            STDERR.puts " - Navigating to #{uri.to_s}"
            driver.navigate.to uri.to_s
            STDERR.puts " - Taking screenshot"
            driver.save_screenshot filename
        rescue Selenium::WebDriver::Error::TimeoutError
            STDERR.puts ' - Timeout'
            next
        rescue Selenium::WebDriver::Error::TimeOutError
            STDERR.puts ' - Timeout'
            next
        ensure
            begin
                STDERR.puts " - Closing browser"
                driver.quit
            end
        end
    end
end

